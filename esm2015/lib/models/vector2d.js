export class Vector2D {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }
    static random(randomNumberGenerator) {
        // static function for a random vector
        if (randomNumberGenerator) {
            return new Vector2D(randomNumberGenerator(), randomNumberGenerator());
        }
        return new Vector2D(Math.random(), Math.random());
    }
    set(v) {
        this.x = v.x;
        this.y = v.y;
        return this;
    }
    add(v) {
        // add 'v' to this vector
        this.x += v.x;
        this.y += v.y;
        return this;
    }
    sub(v) {
        // substract 'v' from this vector (direction from this to 'v' vector)
        this.x -= v.x;
        this.y -= v.y;
        return this;
    }
    mult(factor) {
        // multiply this vector by constant 'factor'
        this.x *= factor;
        this.y *= factor;
        return this;
    }
    div(factor) {
        // divide this vector by constant 'factor'
        if (!factor) {
            return new Vector2D(0, 0);
        }
        this.x /= factor;
        this.y /= factor;
        return this;
    }
    normalize() {
        // convert to unit vector, vector with length of 1 (distance between origin and this vector)
        // NOTE: unsafe normalize (if length is zero)!
        return this.div(this.length());
    }
    length() {
        // lenght of this vector (Pythagorean theorem)
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    dot(v) {
        // dot product between this and 'v' vector
        return this.x * v.x + this.y * v.y;
    }
    negate() {
        // opposite from this vector
        return new Vector2D(-this.x, -this.y);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVjdG9yMmQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9wYW5kZW1pYy1zaW11bGF0b3ItbGliLyIsInNvdXJjZXMiOlsibGliL21vZGVscy92ZWN0b3IyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE9BQU8sUUFBUTtJQUNuQixZQUFtQixDQUFTLEVBQVMsQ0FBUztRQUEzQixNQUFDLEdBQUQsQ0FBQyxDQUFRO1FBQVMsTUFBQyxHQUFELENBQUMsQ0FBUTtJQUM5QyxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxxQkFBaUQ7UUFDN0Qsc0NBQXNDO1FBQ3RDLElBQUkscUJBQXFCLEVBQUU7WUFDekIsT0FBTyxJQUFJLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxFQUFFLHFCQUFxQixFQUFFLENBQUMsQ0FBQztTQUN2RTtRQUNELE9BQU8sSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxHQUFHLENBQUMsQ0FBVztRQUNiLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNiLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELEdBQUcsQ0FBQyxDQUFXO1FBQ2IseUJBQXlCO1FBQ3pCLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELEdBQUcsQ0FBQyxDQUFXO1FBQ2IscUVBQXFFO1FBQ3JFLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELElBQUksQ0FBQyxNQUFjO1FBQ2pCLDRDQUE0QztRQUM1QyxJQUFJLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQztRQUNqQixJQUFJLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxHQUFHLENBQUMsTUFBYztRQUNoQiwwQ0FBMEM7UUFDMUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLE9BQU8sSUFBSSxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzNCO1FBQ0QsSUFBSSxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUM7UUFDakIsSUFBSSxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUM7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsU0FBUztRQUNQLDRGQUE0RjtRQUM1Riw4Q0FBOEM7UUFDOUMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxNQUFNO1FBQ0osOENBQThDO1FBQzlDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELEdBQUcsQ0FBQyxDQUFXO1FBQ2IsMENBQTBDO1FBQzFDLE9BQU8sSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsTUFBTTtRQUNKLDRCQUE0QjtRQUM1QixPQUFPLElBQUksUUFBUSxDQUNqQixDQUFDLElBQUksQ0FBQyxDQUFDLEVBQ1AsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUNSLENBQUM7SUFDSixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVmVjdG9yMkQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgeDogbnVtYmVyLCBwdWJsaWMgeTogbnVtYmVyKSB7XG4gIH1cblxuICBzdGF0aWMgcmFuZG9tKHJhbmRvbU51bWJlckdlbmVyYXRvcjogKCgpID0+IG51bWJlcikgfCB1bmRlZmluZWQpOiBWZWN0b3IyRCB7XG4gICAgLy8gc3RhdGljIGZ1bmN0aW9uIGZvciBhIHJhbmRvbSB2ZWN0b3JcbiAgICBpZiAocmFuZG9tTnVtYmVyR2VuZXJhdG9yKSB7XG4gICAgICByZXR1cm4gbmV3IFZlY3RvcjJEKHJhbmRvbU51bWJlckdlbmVyYXRvcigpLCByYW5kb21OdW1iZXJHZW5lcmF0b3IoKSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVmVjdG9yMkQoTWF0aC5yYW5kb20oKSwgTWF0aC5yYW5kb20oKSk7XG4gIH1cblxuICBzZXQodjogVmVjdG9yMkQpOiBWZWN0b3IyRCB7XG4gICAgdGhpcy54ID0gdi54O1xuICAgIHRoaXMueSA9IHYueTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGFkZCh2OiBWZWN0b3IyRCk6IFZlY3RvcjJEIHtcbiAgICAvLyBhZGQgJ3YnIHRvIHRoaXMgdmVjdG9yXG4gICAgdGhpcy54ICs9IHYueDtcbiAgICB0aGlzLnkgKz0gdi55O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgc3ViKHY6IFZlY3RvcjJEKTogVmVjdG9yMkQge1xuICAgIC8vIHN1YnN0cmFjdCAndicgZnJvbSB0aGlzIHZlY3RvciAoZGlyZWN0aW9uIGZyb20gdGhpcyB0byAndicgdmVjdG9yKVxuICAgIHRoaXMueCAtPSB2Lng7XG4gICAgdGhpcy55IC09IHYueTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG11bHQoZmFjdG9yOiBudW1iZXIpOiBWZWN0b3IyRCB7XG4gICAgLy8gbXVsdGlwbHkgdGhpcyB2ZWN0b3IgYnkgY29uc3RhbnQgJ2ZhY3RvcidcbiAgICB0aGlzLnggKj0gZmFjdG9yO1xuICAgIHRoaXMueSAqPSBmYWN0b3I7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBkaXYoZmFjdG9yOiBudW1iZXIpOiBWZWN0b3IyRCB7XG4gICAgLy8gZGl2aWRlIHRoaXMgdmVjdG9yIGJ5IGNvbnN0YW50ICdmYWN0b3InXG4gICAgaWYgKCFmYWN0b3IpIHtcbiAgICAgIHJldHVybiBuZXcgVmVjdG9yMkQoMCwgMCk7XG4gICAgfVxuICAgIHRoaXMueCAvPSBmYWN0b3I7XG4gICAgdGhpcy55IC89IGZhY3RvcjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG5vcm1hbGl6ZSgpOiBWZWN0b3IyRCB7XG4gICAgLy8gY29udmVydCB0byB1bml0IHZlY3RvciwgdmVjdG9yIHdpdGggbGVuZ3RoIG9mIDEgKGRpc3RhbmNlIGJldHdlZW4gb3JpZ2luIGFuZCB0aGlzIHZlY3RvcilcbiAgICAvLyBOT1RFOiB1bnNhZmUgbm9ybWFsaXplIChpZiBsZW5ndGggaXMgemVybykhXG4gICAgcmV0dXJuIHRoaXMuZGl2KHRoaXMubGVuZ3RoKCkpO1xuICB9XG5cbiAgbGVuZ3RoKCk6IG51bWJlciB7XG4gICAgLy8gbGVuZ2h0IG9mIHRoaXMgdmVjdG9yIChQeXRoYWdvcmVhbiB0aGVvcmVtKVxuICAgIHJldHVybiBNYXRoLnNxcnQodGhpcy54ICogdGhpcy54ICsgdGhpcy55ICogdGhpcy55KTtcbiAgfVxuXG4gIGRvdCh2OiBWZWN0b3IyRCk6IG51bWJlciB7XG4gICAgLy8gZG90IHByb2R1Y3QgYmV0d2VlbiB0aGlzIGFuZCAndicgdmVjdG9yXG4gICAgcmV0dXJuIHRoaXMueCAqIHYueCArIHRoaXMueSAqIHYueTtcbiAgfVxuXG4gIG5lZ2F0ZSgpOiBWZWN0b3IyRCB7XG4gICAgLy8gb3Bwb3NpdGUgZnJvbSB0aGlzIHZlY3RvclxuICAgIHJldHVybiBuZXcgVmVjdG9yMkQoXG4gICAgICAtdGhpcy54LFxuICAgICAgLXRoaXMueVxuICAgICk7XG4gIH1cbn1cbiJdfQ==